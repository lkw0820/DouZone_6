package kosa.api;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormatSymbols;
import java.util.Calendar;

public class CalendarExample {
    private JFrame frame;
    private JPanel calendarPanel;
    private JLabel monthLabel;
    private JButton prevButton;
    private JButton nextButton;
    private JPanel dayPanel;

    private Calendar currentMonth;

    public CalendarExample() {
        frame = new JFrame("Calendar");
        frame.setSize(800, 600);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        calendarPanel = new JPanel(new BorderLayout());

        monthLabel = new JLabel("", JLabel.CENTER);
        monthLabel.setFont(new Font("Arial", Font.BOLD, 20));

        prevButton = new JButton("Prev");
        prevButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                currentMonth.add(Calendar.MONTH, -1);
                updateCalendar();
            }
        });

        nextButton = new JButton("Next");
        nextButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                currentMonth.add(Calendar.MONTH, 1);
                updateCalendar();
            }
        });

        dayPanel = new JPanel(new GridLayout(0, 7));

        calendarPanel.add(monthLabel, BorderLayout.NORTH);
        calendarPanel.add(prevButton, BorderLayout.WEST);
        calendarPanel.add(nextButton, BorderLayout.EAST);
        calendarPanel.add(dayPanel, BorderLayout.CENTER);

        frame.add(calendarPanel);
        frame.pack();
        frame.setVisible(true);

        currentMonth = Calendar.getInstance();
        updateCalendar();
    }

    private void updateCalendar() {
        currentMonth.set(Calendar.DAY_OF_MONTH, 1);

        int month = currentMonth.get(Calendar.MONTH);
        int year = currentMonth.get(Calendar.YEAR);

        monthLabel.setText(new DateFormatSymbols().getMonths()[month] + " " + year);

        dayPanel.removeAll();

        String[] dayNames = new DateFormatSymbols().getShortWeekdays();
        for (String day : dayNames) {
            JLabel label = new JLabel(day, JLabel.CENTER);
            dayPanel.add(label);
        }

        int firstDayOfWeek = currentMonth.get(Calendar.DAY_OF_WEEK);
        int daysInMonth = currentMonth.getActualMaximum(Calendar.DAY_OF_MONTH);

        for (int i = 1; i < firstDayOfWeek; i++) {
            dayPanel.add(new JLabel(""));
        }

        for (int day = 1; day <= daysInMonth; day++) {
            JButton button = new JButton(String.valueOf(day));
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    JButton clickedButton = (JButton) e.getSource();
                    int selectedDay = Integer.parseInt(clickedButton.getText());
                    JOptionPane.showMessageDialog(frame, "You clicked on day " + selectedDay);
                }
            });
            dayPanel.add(button);
        }

        frame.validate();
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(CalendarExample::new);
    }
}

